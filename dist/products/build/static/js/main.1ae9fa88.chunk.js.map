{"version":3,"sources":["store/dataTypes.js","store/initialData.js","store/customReducerEnhancer.js","store/multiActionMiddleware.js","store/asyncEnhancer.js","webservice/RestDataSource.js","store/modelActionCreators.js","store/modelActionTypes.js","store/index.js","store/modelReducer.js","store/stateReducer.js","store/stateActions.js","webservice/RestMiddleware.js","routing/ToggleLink.js","ProductTableRow.js","ProductTable.js","ProductEditor.js","store/EditorConnector.js","store/multiActionCreators.js","DataGetter.js","store/TableConnector.js","SupplierEditor.js","SupplierTableRow.js","SupplierTable.js","routing/RoutedDisplay.js","IsolatedTable.js","IsolatedEditor.js","webservice/RequestError.js","Selector.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCTS","initialData","modelData","_modelData","Object","defineProperty","stateData","editing","selectedId","selectedType","STORE_RESET","delay","RestDataSource","base_url","errorCallback","classCallCheck","this","BASE_URL","handleError","createClass","key","value","callback","SendRequest","_GetOne","asyncToGenerator","regenerator_default","a","mark","_callee","id","wrap","_context","prev","next","concat","stop","_x","_x2","apply","arguments","_Store","_callee2","data","_context2","_x3","_x4","_Update","_callee3","_context3","_x5","_x6","_Delete","_callee4","_context4","_x7","_x8","_SendRequest","_callee5","method","url","_context5","t0","Axios","request","t1","sent","t2","_x9","_x10","_x11","_x12","idCounter","createSaveEvent","dataType","payload","type","objectSpread","enhancedReducer","originalReducer","intialState","storeData","action","result","customReducerEnhancer","combineReducers","map","p","filter","restMiddleware","productsURL","suppliersURL","_dataSources","dataSources","_ref","dispatch","getState","length","GetData","forEach","item","Store","Update","Delete","createRestMiddleware","src_store","createStore","compose","applyMiddleware","Array","isArray","createStoreFunction","store","dispatchAsync","Promise","resolve","reject","setTimeout","ToggleLink","_Component","inherits","_super","_createSuper","props","_this","call","handleClick","setState","doRedirect","state","_this2","react_default","createElement","Route","path","to","exact","children","routeProps","baseClasses","className","activeClass","inActiveClass","combinedClasses","match","Fragment","Redirect","onClick","Component","ProductTableRow","ProductTableRow_createSuper","product","name","category","Number","price","toFixed","editCallback","deleteCallback","ProductTable","ProductTable_createSuper","colSpan","products","ProductTableRow_ProductTableRow","ProductEditor","ProductEditor_createSuper","handleChange","ev","persist","formData","target","saveCallback","disabled","onChange","cancelCallback","EditorConnector","presentationComponent","mapDispatchToProps","supplier","saveAndEndEditing","withRouter","connect","ownProps","mode","params","find","s","dataProps","functionProps","routedDispatchers","history","push","assign","TableConnector","suppliers","supp","val","getData","WrappedComponent","_class","DataGetter_createSuper","DataGetter","SupplierEditor","SupplierEditor_createSuper","split","city","SupplierTableRow","SupplierTableRow_createSuper","join","SupplierTable","SupplierTable_createSuper","SupplierTableRow_SupplierTableRow","RoutedDisplay","ConnectedEditor","ConnectedTable","RoutedDisplay_createSuper","modeParam","Link","IsolatedTable","IsolatedTable_createSuper","dataSource","err","_this3","deleteProduct","GetOne","_this4","IsolatedEditor","IsolatedEditor_createSuper","save","cancel","dataItem","ProductEditor_ProductEditor","RequestError","RequestError_createSuper","message","Selector","Selector_createSuper","routes","React","Children","child","component","toLowerCase","datatype","BrowserRouter","getUserConfirmation","customGetUserConfirmation","ToggleLink_ToggleLink","r","Switch","App","es","dataStore","Selector_Selector","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ae9fa88.chunk.js","sourcesContent":["export const PRODUCTS = \"products\";\nexport const SUPPLIERS = \"suppliers\";\n","import { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\n\nexport const initialData = {\n    modelData: {\n        [PRODUCTS]: [],\n        [SUPPLIERS]: []\n    },\n    stateData: {\n        editing: false,\n        selectedId: -1,\n        selectedType: PRODUCTS\n    }\n}\n","import { initialData } from \"./initialData\";\n\nexport const STORE_RESET = \"store_clear\";\n\nexport const resetStore = () => ({ type: STORE_RESET });\n\nexport function customReducerEnhancer(originalReducer) {\n\n    let intialState = null;\n\n    return (storeData, action) => {\n        if (action.type === STORE_RESET && initialData != null) {\n            return intialState;\n        } else {\n            const result = originalReducer(storeData, action);\n            if (intialState == null) {\n                intialState = result;\n            }\n            return result;\n        }\n    }\n}\n","export const multiActions = ({dispatch, getState}) => next => action => {\n    if (Array.isArray(action)) {\n        action.forEach(a => next(a));\n    } else {\n        next(action);\n    }\n}\n","export const asyncEnhancer = delay => createStoreFunction => (...args) => {\n    const store = createStoreFunction(...args);\n    return {\n        ...store,\n        dispatchAsync: (action) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n                store.dispatch(action);\n                resolve();\n            }, delay);\n        })\n    };\n}\n","import Axios from \"axios\";\n\nexport class RestDataSource {\n\n    constructor(base_url, errorCallback) {\n        this.BASE_URL = base_url;\n        this.handleError = errorCallback;\n    }\n\n    GetData(callback) {\n        this.SendRequest(\"get\", this.BASE_URL, callback);\n    }\n\n    async GetOne(id, callback) {\n        this.SendRequest(\"get\", `${this.BASE_URL}/${id}`, callback);\n    }\n\n    async Store(data, callback) {\n        this.SendRequest(\"post\", this.BASE_URL, callback, data)\n    }\n\n    async Update(data, callback) {\n        this.SendRequest(\"put\", `${this.BASE_URL}/${data.id}`, callback, data);\n    }\n\n    async Delete(data, callback) {\n        this.SendRequest(\"delete\", `${this.BASE_URL}/${data.id}`, callback, data);\n    }\n\n    async SendRequest(method, url, callback, data) {\n        try {\n            callback((await Axios.request({\n                method: method, \n                url: url,\n                data: data\n            })).data);\n        } catch(err) {\n            this.handleError(\"Operation Failed: Network Error\");            \n        }\n    }\n}\n","import { PRODUCTS, SUPPLIERS } from \"./dataTypes\"\nimport { STORE, UPDATE, DELETE } from \"./modelActionTypes\";\n \nlet idCounter = 100;\n\nexport const saveProduct = (product) => {\n    return createSaveEvent(PRODUCTS, product);\n}\n\nexport const saveSupplier = (supplier) => {\n    return createSaveEvent(SUPPLIERS, supplier);\n}\n\nconst createSaveEvent = (dataType, payload)  => {\n    if (!payload.id) {\n        return {\n            type: STORE,\n            dataType: dataType,\n            payload: { ...payload, id: idCounter++ }\n        }       \n    } else {\n        return {\n            type: UPDATE,\n            dataType: dataType,\n            payload: payload\n        }\n    }\n}\n    \nexport const deleteProduct = (product) => ({\n    type: DELETE,\n    dataType: PRODUCTS,\n    payload: product.id\n})\n\nexport const deleteSupplier = (supplier) => ({\n    type: DELETE,\n    dataType: SUPPLIERS,\n    payload: supplier.id\n})\n","export const STORE  = \"STORE\";\nexport const UPDATE = \"UPDATE\";\nexport const DELETE = \"DELETE\";\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport modelReducer from \"./modelReducer\";\nimport stateReducer from \"./stateReducer\";\nimport { customReducerEnhancer } from \"./customReducerEnhancer\";\nimport { multiActions } from \"./multiActionMiddleware\";\nimport { asyncEnhancer } from \"./asyncEnhancer\";\nimport { createRestMiddleware } from \"../webservice/RestMiddleware\";\n\nconst enhancedReducer = customReducerEnhancer(\n    combineReducers(\n        {\n            modelData: modelReducer, \n            stateData: stateReducer\n        })\n);\n\nconst restMiddleware = createRestMiddleware(\n    \"http://localhost:3500/api/products\", \n    \"http://localhost:3500/api/suppliers\");\n\nexport default createStore(enhancedReducer, \n    compose(applyMiddleware(multiActions), \n        applyMiddleware(restMiddleware),  \n        asyncEnhancer(2000)));\n\nexport { saveProduct, saveSupplier, deleteProduct, deleteSupplier } \n    from \"./modelActionCreators\";\n","import { STORE, UPDATE, DELETE } from \"./modelActionTypes\";\nimport { initialData } from \"./initialData\";\n\nexport default function(storeData, action) {\n    switch (action.type) {\n        case STORE:\n            return {\n                ...storeData, \n                [action.dataType]:\n                    storeData[action.dataType].concat([action.payload])\n            }\n        case UPDATE:        \n            return {\n                ...storeData,\n                [action.dataType]: storeData[action.dataType].map(p => \n                    p.id === action.payload.id ? action.payload : p)\n            }\n        case DELETE:\n            return {\n                ...storeData,\n                [action.dataType]: storeData[action.dataType]\n                    .filter(p => p.id !== action.payload)\n            }\n        default: \n            return storeData || initialData.modelData;\n    }   \n}\n","import { STATE_START_EDITING, STATE_END_EDITING, STATE_START_CREATING } \n    from \"./stateActions\";\nimport { initialData } from \"./initialData\";\n\nexport default function(storeData, action) {\n    switch(action.type) {\n        case STATE_START_EDITING:\n        case STATE_START_CREATING:\n            return {\n                ...storeData,\n                editing: true, \n                selectedId: action.type === STATE_START_EDITING \n                    ? action.payload.id : -1, \n                selectedType: action.dataType\n            }\n        case STATE_END_EDITING:\n            return {\n                ...storeData,\n                editing: false\n            }\n        default:\n            return storeData || initialData.stateData;\n    }\n}\n","import { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\n\nexport const STATE_START_EDITING = \"state_start_editing\";\nexport const STATE_END_EDITING = \"state_end_editing\";\nexport const STATE_START_CREATING = \"state_start_creating\";\n\nexport const startEditingProduct = (product) => ({\n    type: STATE_START_EDITING,\n    dataType: PRODUCTS,\n    payload: product\n})\n\nexport const startEditingSupplier = (supplier) => ({\n    type: STATE_START_EDITING,\n    dataType: SUPPLIERS,\n    payload: supplier\n})\n\nexport const endEditing = () => ({\n    type: STATE_END_EDITING\n})\n\nexport const startCreatingProduct = () => ({\n    type: STATE_START_CREATING, dataType: PRODUCTS\n})\n\nexport const startCreatingSupplier = () => ({\n    type: STATE_START_CREATING, dataType: SUPPLIERS\n})\n","import { STORE, UPDATE, DELETE} from \"../store/modelActionTypes\";\nimport { RestDataSource } from \"./RestDataSource\";\nimport { PRODUCTS, SUPPLIERS } from \"../store/dataTypes\";\n\nexport const GET_DATA = \"rest_get_data\";\n\nexport const getData = (dataType) => {\n    return {\n        type: GET_DATA,\n        dataType: dataType\n    }\n}\n\nexport const createRestMiddleware = (productsURL, suppliersURL) => {\n\n    const dataSources = {\n        [PRODUCTS]: new RestDataSource(productsURL, () => {}),\n        [SUPPLIERS]: new RestDataSource(suppliersURL, () => {})\n    }\n    \n    return ({dispatch, getState}) => next => action => {\n        switch (action.type) {\n            case GET_DATA:\n                if (getState().modelData[action.dataType].length === 0) {\n                    dataSources[action.dataType].GetData((data) => \n                        data.forEach(item => next({ type: STORE, \n                            dataType: action.dataType, payload: item})));\n                }\n                break;\n            case STORE:\n                action.payload.id = null;\n                dataSources[action.dataType].Store(action.payload, data => \n                    next({ ...action, payload: data }))\n                break;\n            case UPDATE:          \n                dataSources[action.dataType].Update(action.payload, data => \n                     next({ ...action, payload: data }))            \n                break;\n            case DELETE:\n                dataSources[action.dataType].Delete({id: action.payload }, \n                    () => next(action));\n                break;\n            default:\n                next(action);\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport class ToggleLink extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            doRedirect: false\n        }\n    }\n\n    handleClick = () => {\n        this.setState({ doRedirect: true}, \n            () => this.setState({ doRedirect: false }));\n    }\n\n    render() {\n        return <Route path={ this.props.to } exact={ this.props.exact }\n                children={ routeProps => {\n            \n            const baseClasses = this.props.className || \"m-2 btn btn-block\";\n            const activeClass = this.props.activeClass || \"btn-primary\";\n            const inActiveClass = this.props.inActiveClass || \"btn-secondary\"\n\n            const combinedClasses = \n                `${baseClasses} ${routeProps.match ? activeClass : inActiveClass}`\n            \n            return  <React.Fragment>\n                { this.state.doRedirect && <Redirect to={ this.props.to } /> }\n                <button className={ combinedClasses } onClick={ this.handleClick }> \n                    {this.props.children} \n                </button>             \n            </React.Fragment>\n         }} />\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class ProductTableRow extends Component {\n\n    render() {\n        let p = this.props.product;\n        return <tr>\n            <td>{ p.id }</td>\n            <td>{ p.name }</td>\n            <td>{ p.category}</td>\n            <td className=\"text-right\">${ Number(p.price).toFixed(2) }</td>\n            <td>\n                <button className=\"btn btn-sm btn-warning m-1\"\n                    onClick={ () => this.props.editCallback(p) }>\n                        Edit\n                </button>\n                <button className=\"btn btn-sm btn-danger m-1\"\n                    onClick={ () => this.props.deleteCallback(p) }>\n                        Delete\n                    </button>                    \n            </td>\n        </tr>\n    }\n}\n","import React, { Component } from \"react\";\nimport { ProductTableRow } from \"./ProductTableRow\";\n\nexport class ProductTable extends Component {\n\n    render() {\n        return <table className=\"table table-sm table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"5\" \n                                className=\"bg-primary text-white text-center h4 p-2\">\n                            Products\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>ID</th><th>Name</th><th>Category</th>\n                        <th className=\"text-right\">Price</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.props.products.map(p => \n                            <ProductTableRow product={ p } \n                                key={ p.id }\n                                editCallback={ this.props.editCallback }\n                                deleteCallback={ this.props.deleteCallback } />)\n                    }\n                </tbody>\n            </table>        \n    }\n}\n","import React, { Component } from \"react\";\n\nexport class ProductEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formData: {\n                id: props.product.id || \"\",\n                name: props.product.name || \"\", \n                category: props.product.category || \"\", \n                price: props.product.price || \"\"\n            }\n        }\n    }\n\n    handleChange = (ev) => {\n        ev.persist();\n        this.setState(state => state.formData[ev.target.name] =  ev.target.value);\n    }\n\n    handleClick = () => {\n        this.props.saveCallback(this.state.formData);\n    }\n\n    render() {\n        return <div className=\"m-2\">\n            <div className=\"form-group\">\n                <label>ID</label>\n                <input className=\"form-control\" name=\"id\"\n                    disabled\n                    value={ this.state.formData.id }\n                    onChange={ this.handleChange } />\n            </div>\n            <div className=\"form-group\">\n                <label>Name</label>\n                <input className=\"form-control\" name=\"name\"\n                    value={ this.state.formData.name }\n                    onChange={ this.handleChange } />\n            </div>            \n            <div className=\"form-group\">\n                <label>Category</label>\n                <input className=\"form-control\" name=\"category\"\n                    value={ this.state.formData.category }\n                    onChange={ this.handleChange } />\n            </div>              \n            <div className=\"form-group\">\n                <label>Price</label>\n                <input className=\"form-control\" name=\"price\"\n                    value={ this.state.formData.price }\n                    onChange={ this.handleChange } />\n            </div>                          \n            <div className=\"text-center\">\n                <button className=\"btn btn-primary m-1\" onClick={ this.handleClick }>\n                    Save\n                </button>\n                <button className=\"btn btn-secondary\" \n                        onClick={ this.props.cancelCallback }>\n                    Cancel\n                </button>                \n            </div>\n        </div>\n    }\n}\n","import { connect } from \"react-redux\";\n//import { endEditing } from \"./stateActions\";\nimport { PRODUCTS, SUPPLIERS  } from \"./dataTypes\";\nimport { saveAndEndEditing } from \"./multiActionCreators\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const EditorConnector = (dataType, presentationComponent) => {\n\n    const mapStateToProps = (storeData, ownProps) => {\n        const mode = ownProps.match.params.mode;\n        const id = Number(ownProps.match.params.id);   \n        return {\n            editing: mode === \"edit\" || mode === \"create\",\n            product: (storeData.modelData[PRODUCTS].find(p => p.id === id)) || {},\n            supplier:(storeData.modelData[SUPPLIERS].find(s => s.id === id)) || {}            \n        }\n    }\n        \n    const mapDispatchToProps = {\n        //cancelCallback: endEditing,\n        saveCallback: (data) => saveAndEndEditing(data, dataType)\n    }\n    \n    const mergeProps = (dataProps, functionProps, ownProps) => {\n        let routedDispatchers = {\n            cancelCallback: () => ownProps.history.push(`/${dataType}`),\n            saveCallback: (data) => {\n                functionProps.saveCallback(data);\n                ownProps.history.push(`/${dataType}`);                \n            }\n        }\n        return Object.assign({}, dataProps, routedDispatchers, ownProps);\n    }\n\n    return withRouter(connect(mapStateToProps, \n        mapDispatchToProps, mergeProps)(presentationComponent));\n}\n","import { PRODUCTS } from \"./dataTypes\";\nimport { saveProduct, saveSupplier } from \"./modelActionCreators\";\nimport { endEditing } from \"./stateActions\";\n\nexport const saveAndEndEditing = (data, dataType) => \n    [dataType === PRODUCTS ? saveProduct(data) : saveSupplier(data), endEditing()];\n","import React, { Component } from \"react\";\nimport { PRODUCTS, SUPPLIERS } from \"./store/dataTypes\";\n\nexport const DataGetter = (dataType, WrappedComponent) => {\n\n    return class extends Component {\n        render() {\n            return <WrappedComponent { ...this.props } />\n        }\n\n        componentDidMount() {\n            this.props.getData(PRODUCTS);\n            if (dataType === SUPPLIERS) {\n                this.props.getData(SUPPLIERS);                \n            }\n        }\n    }\n}\n","import { connect } from \"react-redux\";\n//import { startEditingProduct, startEditingSupplier } from \"./stateActions\";\nimport { deleteProduct, deleteSupplier } from \"./modelActionCreators\";\nimport { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\nimport { withRouter } from \"react-router-dom\";\nimport { getData } from \"../webservice/RestMiddleware\";\nimport { DataGetter } from \"../DataGetter\";\n\nexport const TableConnector = (dataType, presentationComponent) => {\n\n    const mapStateToProps = (storeData, ownProps) => {\n        if (dataType === PRODUCTS) {\n            return { products: storeData.modelData[PRODUCTS] };\n        } else {\n            return { \n                suppliers: storeData.modelData[SUPPLIERS].map(supp => ({\n                    ...supp, \n                    products: supp.products.map(id => \n                        storeData.modelData[PRODUCTS]\n                            .find(p => p.id === Number(id)) || id)\n                            .map(val => val.name || val)\n                    }))\n            }\n        }\n    }\n    \n    const mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            getData: (type) => dispatch(getData(type)),\n            deleteCallback: dataType === PRODUCTS \n                ? (...args) => dispatch(deleteProduct(...args))\n                : (...args) => dispatch(deleteSupplier(...args)) \n        }\n    }\n\n    const mergeProps = (dataProps, functionProps, ownProps) => {\n        let routedDispatchers = {\n            editCallback: (target) => {\n                ownProps.history.push(`/${dataType}/edit/${target.id}`);                \n            },\n            deleteCallback: functionProps.deleteCallback,\n            getData: functionProps.getData \n\n        }\n        return Object.assign({}, dataProps, routedDispatchers, ownProps);\n    }\n\n    return withRouter(connect(mapStateToProps, \n        mapDispatchToProps, mergeProps)(DataGetter(dataType, \n            presentationComponent)));\n}\n","import React, { Component } from \"react\";\n\nexport class SupplierEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formData: {\n                id: props.supplier.id || \"\",\n                name: props.supplier.name || \"\", \n                city: props.supplier.city || \"\", \n                products: props.supplier.products || [], \n            }\n        }\n    }\n\n    handleChange = (ev) => {\n        ev.persist();\n        this.setState(state => \n            state.formData[ev.target.name] =  \n                ev.target.name === \"products\" \n                    ? ev.target.value.split(\",\") : ev.target.value);\n    }\n\n    handleClick = () => {\n        this.props.saveCallback(\n            { \n                ...this.state.formData, \n                products: this.state.formData.products.map(val => Number(val))\n            });\n    }\n\n    render() {\n        return <div className=\"m-2\">\n            <div className=\"form-group\">\n                <label>ID</label>\n                <input className=\"form-control\" name=\"id\"\n                    disabled\n                    value={ this.state.formData.id }\n                    onChange={ this.handleChange } />\n            </div>\n            <div className=\"form-group\">\n                <label>Name</label>\n                <input className=\"form-control\" name=\"name\"\n                    value={ this.state.formData.name }\n                    onChange={ this.handleChange } />\n            </div>       \n            <div className=\"form-group\">\n                <label>City</label>\n                <input className=\"form-control\" name=\"city\"\n                    value={ this.state.formData.city }\n                    onChange={ this.handleChange } />\n            </div>       \n\n            <div className=\"form-group\">\n                <label>Products</label>\n                <input className=\"form-control\" name=\"products\"\n                    value={ this.state.formData.products }\n                    onChange={ this.handleChange } />\n            </div>                   \n\n            <div className=\"text-center\">\n                <button className=\"btn btn-primary m-1\" onClick={ this.handleClick }>\n                    Save\n                </button>\n                <button className=\"btn btn-secondary\" \n                        onClick={ this.props.cancelCallback }>\n                    Cancel\n                </button>                \n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\n\nexport class SupplierTableRow extends Component {\n\n    render() {\n        let s = this.props.supplier;\n        return <tr>\n            <td>{ s.id }</td>\n            <td>{ s.name }</td>\n            <td>{ s.city}</td>\n            <td>{ s.products.join(\", \") }</td>\n            <td>\n                <button className=\"btn btn-sm btn-warning m-1\"\n                    onClick={ () => this.props.editCallback(s) }>\n                        Edit\n                </button>\n                <button className=\"btn btn-sm btn-danger m-1\"\n                    onClick={ () => this.props.deleteCallback(s) }>\n                        Delete\n                    </button>                    \n            </td>\n        </tr>\n    }\n}\n","import React, { Component } from \"react\";\nimport { SupplierTableRow } from \"./SupplierTableRow\";\n\nexport class SupplierTable extends Component {\n\n    render() {\n        return <table className=\"table table-sm table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>ID</th><th>Name</th><th>City</th>\n                        <th>Products</th><th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.props.suppliers.map(s => \n                            <SupplierTableRow supplier={ s } \n                                key={ s.id }\n                                editCallback={ this.props.editCallback }\n                                deleteCallback={ this.props.deleteCallback } />)\n                    }\n                </tbody>\n            </table>        \n    }\n}\n","import React, { Component } from \"react\";\nimport { ProductTable } from \"../ProductTable\"\nimport { ProductEditor } from \"../ProductEditor\";\nimport { EditorConnector } from \"../store/EditorConnector\";\nimport { PRODUCTS } from \"../store/dataTypes\";\nimport { TableConnector } from \"../store/TableConnector\";\nimport { Link } from \"react-router-dom\";\nimport { SupplierEditor } from \"../SupplierEditor\";\nimport { SupplierTable } from \"../SupplierTable\";\n\nexport const RoutedDisplay = (dataType) => {\n\n    const ConnectedEditor = EditorConnector(dataType, dataType === PRODUCTS \n        ? ProductEditor: SupplierEditor);\n    const ConnectedTable = TableConnector(dataType, dataType === PRODUCTS \n        ? ProductTable : SupplierTable);\n    \n    return class extends Component {\n        render() {\n            const modeParam = this.props.match.params.mode;\n            if (modeParam === \"edit\" || modeParam === \"create\") {\n                return <ConnectedEditor key={ this.props.match.params.id || -1 } />\n            } else {\n                return <div className=\"m-2\">\n                    <ConnectedTable />\n                    <div className=\"text-center\">\n                        <Link to={`/${dataType}/create`} \n                                className=\"btn btn-primary m-1\">\n                            Create\n                        </Link>\n                    </div>                        \n                </div>\n            }\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { RestDataSource } from \"./webservice/RestDataSource\";\nimport { Link } from \"react-router-dom\";\n\nexport class IsolatedTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: []\n        }\n        this.dataSource = new RestDataSource(\"http://localhost:3500/api/products\", \n            (err) => this.props.history.push(`/error/${err}`));\n    }\n\n    deleteProduct(product) {\n        this.dataSource.Delete(product, \n           () => this.setState({products: this.state.products.filter(p => \n                p.id !== product.id)}));\n    }\n\n    render() {\n        return <table className=\"table table-sm table-striped table-bordered\">\n            <thead>\n                <tr><th colSpan=\"5\" \n                        className=\"bg-info text-white text-center h4 p-2\">\n                    (Isolated) Products\n                </th></tr>\n                <tr>\n                    <th>ID</th><th>Name</th><th>Category</th>\n                    <th className=\"text-right\">Price</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    this.state.products.map(p => <tr key={ p.id }>\n                        <td>{ p.id }</td><td>{ p.name }</td><td>{p.category}</td>\n                        <td className=\"text-right\">\n                            ${ Number(p.price).toFixed(2)}\n                        </td>\n                        <td>\n                            <Link className=\"btn btn-sm btn-warning mx-2\" \n                                    to={`/isolated/edit/${p.id}`}>\n                                Edit\n                            </Link>\n                            <button className=\"btn btn-sm btn-danger mx-2\" \n                                onClick={ () => this.deleteProduct(p)}>\n                                    Delete\n                            </button>\n                        </td>\n                    </tr>)\n                }\n            </tbody>\n            <tfoot>\n                <tr className=\"text-center\">\n                    <td colSpan=\"5\">\n                        <Link to=\"/isolated/create\" \n                            className=\"btn btn-info\">Create</Link>                    \n                        <button className=\"btn btn-danger mx-2\"\n                            onClick={ () => this.dataSource.GetOne(\"err\")}>\n                            Error\n                        </button>\n                    </td>\n                </tr>\n            </tfoot>\n        </table>        \n    }\n\n    componentDidMount() {\n        this.dataSource.GetData(data => this.setState({products: data}));\n    }\n}\n","import React, { Component } from \"react\";\nimport { RestDataSource } from \"./webservice/RestDataSource\";\nimport { ProductEditor } from \"./ProductEditor\";\n\nexport class IsolatedEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataItem: {}\n        };\n        this.dataSource = this.props.dataSource \n            || new RestDataSource(\"http://localhost:3500/api/products\");\n    }\n\n    save = (data) => {\n        const callback = () => this.props.history.push(\"/isolated\");\n        if (data.id === \"\") {\n            this.dataSource.Store(data, callback);\n        } else {\n            this.dataSource.Update(data, callback);\n        }\n    }\n\n    cancel = () => this.props.history.push(\"/isolated\");\n\n    render() {\n        return <ProductEditor key={ this.state.dataItem.id } \n            product={ this.state.dataItem } saveCallback={ this.save } \n            cancelCallback={ this.cancel } />\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.mode === \"edit\") {\n            this.dataSource.GetOne(this.props.match.params.id, \n                data => this.setState({ dataItem: data}));\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class RequestError extends Component {\n\n    render() {\n        return <div>\n            <h5 className=\"bg-danger text-center text-white m-2 p-3\">\n                { this.props.match.params.message }\n            </h5>\n            <div className=\"text-center\">\n                <Link to=\"/\" className=\"btn btn-secondary\">OK</Link>\n            </div>\n        </div>\n    }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } \n    from \"react-router-dom\";\nimport { ToggleLink } from \"./routing/ToggleLink\";\nimport { RoutedDisplay } from \"./routing/RoutedDisplay\";\nimport { IsolatedTable } from \"./IsolatedTable\";\nimport { IsolatedEditor } from \"./IsolatedEditor\";\nimport { RequestError } from \"./webservice/RequestError\";\n\nexport class Selector extends Component {\n\n    render() {\n\n        const routes = React.Children.map(this.props.children, child => ({\n            component: child,\n            name: child.props.name,            \n            url: `/${child.props.name.toLowerCase()}`,\n            datatype: child.props.datatype\n        }));\n\n        return <Router getUserConfirmation={ this.customGetUserConfirmation }>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-2\">            \n                        <ToggleLink to=\"/isolated\">Isolated Data</ToggleLink>\n                        { routes.map(r => <ToggleLink key={ r.url } to={ r.url }>\n                                            { r.name }\n                                        </ToggleLink>)}\n                    </div>\n                    <div className=\"col\">\n                        <Switch>\n                            <Route path=\"/isolated\" component={ IsolatedTable } \n                                exact={ true } />\n                            <Route path=\"/isolated/:mode/:id?\" \n                                component={ IsolatedEditor } />\n                            <Route path=\"/error/:message\" \n                                component={ RequestError } />\n                            { routes.map(r => \n                               <Route key={ r.url } \n                                   path={ `/:datatype(${r.datatype})/:mode?/:id?`}\n                                   component={ RoutedDisplay(r.datatype)} />\n                            )}\n                            <Redirect to={ routes[0].url } />\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </Router>        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport dataStore from \"./store\";\nimport { Selector } from \"./Selector\";\n// import { ProductDisplay } from \"./ProductDisplay\";\n// import { SupplierDisplay } from \"./SupplierDisplay\";\nimport { PRODUCTS, SUPPLIERS } from \"./store/dataTypes\";\n\nexport default class App extends Component {\n\n    render() {\n        return  <Provider store={ dataStore }>\n                    <Selector>\n                        <data name=\"Products\" datatype={ PRODUCTS } />\n                        <data name=\"Suppliers\" datatype ={ SUPPLIERS } />\n                    </Selector>      \n                </Provider>                            \n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}